alias userSP R0;
userSP=SP;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=SP;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;

alias syscallPhysicalAddr R1;
syscallPhysicalAddr=[[PTBR+2*((userSP-5)/512)]*512+(userSP-5)%512];

[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=syscallPhysicalAddr;
alias retvalPhysicalAddr R2;
retvalPhysicalAddr=[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512;

if(syscallPhysicalAddr==11) then
    [retvalPhysicalAddr]=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+1];
endif;

if(syscallPhysicalAddr==12) then
    [retvalPhysicalAddr]=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+2];
endif;

if(syscallPhysicalAddr==13) then
    alias pid R2;
    pid=[[PTBR+2*((userSP-4)/512)]*512+(userSP-4)%512];
    if([PROCESS_TABLE+pid*16+4]==TERMINATED || [SYSTEM_STATUS_TABLE+1]==pid || (pid>15 && pid<0)) then
        [retvalPhysicalAddr]=-1;
    else
        [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=WAIT_PROCESS;
        [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+5]=pid;
        backup;
        call MOD_5;
        restore;
        [retvalPhysicalAddr]=0;
    endif;
endif;

if(syscallPhysicalAddr==14) then
    alias i R3;
    i=2;
    while(i<16) do
        if([PROCESS_TABLE+i*16+4]==WAIT_PROCESS && [PROCESS_TABLE+i*16+5]==[SYSTEM_STATUS_TABLE+1]) then
            [PROCESS_TABLE+i*16+4]=READY;
        endif;
        i=i+1;
    endwhile;
    [retvalPhysicalAddr]=0;
endif;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
ireturn;
