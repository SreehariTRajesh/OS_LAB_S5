alias functionNum R1;
alias arg2 R2;
if(functionNum==GET_FREE_PAGE) then
    if([PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]!=WAIT_MEM) then
        [SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]+1;
    endif;
    while([SYSTEM_STATUS_TABLE+2]==0) do
        [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=WAIT_MEM;
        backup;
        call MOD_5;
        restore;
    endwhile;
    [SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]-1;
    [SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]-1;
    alias page_no R3;
    page_no=83;
    while(page_no<128) do
        if([MEMORY_FREE_LIST+page_no]==0) then
            R0=page_no;
            [MEMORY_FREE_LIST+page_no]=1;
            return;
        endif;
        page_no=page_no+1;
    endwhile;
    R0=-1;
    return;
endif;

if(functionNum==RELEASE_PAGE) then
    [MEMORY_FREE_LIST+arg2]=[MEMORY_FREE_LIST+arg2]-1;
    if([MEMORY_FREE_LIST+arg2]==0) then
        [SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]+1;
    endif;
    alias pid R3;
    pid=2;
    while(pid<16) do
        if([PROCESS_TABLE+pid*16+4]==WAIT_MEM) then
            [PROCESS_TABLE+pid*16+4]=READY;
        endif;
        pid=pid+1;
    endwhile;
    return;
endif;

if(functionNum==GET_CODE_PAGE) then
        alias i R3;
        i=0;
        while(i<16) do
            if([DISK_MAP_TABLE+i*10+4]==R2 && [PAGE_TABLE_BASE+i*20+8]!=-1) then
                R0=[PAGE_TABLE_BASE+i*20+8];
                [MEMORY_FREE_LIST+[PAGE_TABLE_BASE+i*20+8]]=[MEMORY_FREE_LIST+[PAGE_TABLE_BASE+i*20+8]]+1;
                return;
            endif;
            if([DISK_MAP_TABLE+i*10+5]==R2 && [PAGE_TABLE_BASE+i*20+10]!=-1) then
                R0=[PAGE_TABLE_BASE+i*20+10];
                [MEMORY_FREE_LIST+[PAGE_TABLE_BASE+i*20+10]]=[MEMORY_FREE_LIST+[PAGE_TABLE_BASE+i*20+10]]+1;
                return;
            endif;
            if([DISK_MAP_TABLE+i*10+6]==R2 && [PAGE_TABLE_BASE+i*20+12]!=-1) then
                R0=[PAGE_TABLE_BASE+i*20+12];
                [MEMORY_FREE_LIST+[PAGE_TABLE_BASE+i*20+12]]=[MEMORY_FREE_LIST+[PAGE_TABLE_BASE+i*20+12]]+1;
                return;
            endif;
            if([DISK_MAP_TABLE+i*10+7]==R2 && [PAGE_TABLE_BASE+i*20+14]!=-1) then
                R0=[PAGE_TABLE_BASE+i*20+14];
                [MEMORY_FREE_LIST+[PAGE_TABLE_BASE+i*20+14]]=[MEMORY_FREE_LIST+[PAGE_TABLE_BASE+i*20+14]]+1;
                return;
            endif;
            i=i+1;
        endwhile;
        if(i==16) then
            multipush(R1,R2,R3,R4);
            R1=GET_FREE_PAGE;
            call MOD_2;
            multipop(R1,R2,R3,R4);
            
            multipush(R1,R2,R3,R4);
            R1=DISK_LOAD;
            R3=R0;
            R4=R2;
            R2=[SYSTEM_STATUS_TABLE+1];
            call MOD_4;
            multipop(R1,R2,R3,R4);
        endif;
        return;
endif;

if(functionNum==RELEASE_BLOCK) then
    [DISK_FREE_LIST+arg2]=0;
    return;
endif;

if(functionNum==GET_FREE_BLOCK) then
    alias i R5;
    i=DISK_FREE_AREA;
    while(i<DISK_SWAP_AREA) do
        if([DISK_FREE_LIST+i]==0) then
            [DISK_FREE_LIST+i]=1;
            R0=i;
            return;
        endif;
        i=i+1;
    endwhile;
    R0=-1;
    return;
endif;

return;
