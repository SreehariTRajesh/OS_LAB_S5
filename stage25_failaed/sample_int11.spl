alias userSP R0;
userSP=SP;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=SP;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;

alias syscallPhysicalAddr R1;
syscallPhysicalAddr=[[PTBR+2*((userSP-5)/512)]*512+(userSP-5)%512];

alias retvalPhysicalAddr R2;
retvalPhysicalAddr=[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512;
alias process_entry R3;
process_entry=PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16;

if(syscallPhysicalAddr==11) then
    [retvalPhysicalAddr]=[process_entry+2];
    SP=[process_entry+13];
    ireturn;
endif;

if(syscallPhysicalAddr==12) then
    [retvalPhysicalAddr]=[process_entry+2];
    SP=[process_entry+13];
    ireturn;
endif;

if(syscallPhysicalAddr==13) then
    [process_entry+9]=13;
    alias pid R4;
    pid=[[PTBR+2*((userSP-4)/512)]*512+(userSP-4)%512];
    if([PROCESS_TABLE+pid*16+4]==TERMINATED || [SYSTEM_STATUS_TABLE+1]==pid || (pid>=16 && pid<0)) then
        [retvalPhysicalAddr]=-1;
        [process_entry+9]=0;   
        SP=[process_entry+13];
        ireturn; 
    else
        [process_entry+4]=WAIT_PROCESS;
        [process_entry+5]=pid;    
        backup;
        call MOD_5;
        restore;
        
        [retvalPhysicalAddr]=0;
        [process_entry+9]=0;   
        SP=[process_entry+13];
        ireturn;
    endif;
endif;

if(syscallPhysicalAddr==14) then
    [process_entry+9]=14;
    alias pid R4;
    alias i R5;
    i=2;
    while(i<16) do
        if([PROCESS_TABLE+i*16+4]==WAIT_PROCESS && [PROCESS_TABLE+i*16+5]==[SYSTEM_STATUS_TABLE+1]) then
            [PROCESS_TABLE+i*16+4]=READY;
        endif; 
        i=i+1;
    endwhile;
    [process_entry+9]=0;
    SP=[process_entry+13];
    [retvalPhysicalAddr]=0;
    ireturn;
endif;
