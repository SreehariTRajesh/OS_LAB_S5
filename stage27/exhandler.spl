[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=-1;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=SP;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;
backup;
multipush(EIP);
if(EC==0) then
   if(EPN==2||EPN==3) then
      multipush(R0,R1);
      R1=GET_FREE_PAGE;
      call MOD_2;
      R10=R0;
      multipop(R0,R1);
      [PTBR+4]=R10;
      [PTBR+5]="1110";
      multipush(R0,R1);
      R1=GET_FREE_PAGE;
      call MOD_2;
      R10=R0;
      multipop(R0,R1);
      [PTBR+6]=R10;
      [PTBR+7]="1110";
   endif;

   if(EPN==4 || EPN==5 ||EPN==6 || EPN==7) then
       multipush(EPN);
       R1=GET_CODE_PAGE;
       R2=[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+EPN];
       call MOD_2;
       R10=R0;
       multipop(EPN);
       [PTBR+2*EPN]=R10;
       [PTBR+2*EPN+1]="1100";
   endif;
endif;

if([PROCESS_TABLE+[SYSTEM_STATUS_TABLE]*16+13]==PTLR*512-1) then
   print "FULLSTACK";
   R1=EXIT_PROCESS;
   R2=[SYSTEM_STATUS_TABLE+1];
   call MOD_1;
   call MOD_5;
endif;

if(EC==1) then
   print "PROCESS:";
   print [SYSTEM_STATUS_TABLE+1];
   print "ILL.INSTR";
   print "value:";
   print [EIP];
   print "EIP:";
   print EIP;
   print "EiPN:";
   print EIP/512;
   print "physEiPN";
   print [PTBR+EIP/256];
   print "EPN:";
   print EPN;
   print "EMA:";
   print EMA;
   print "EC:";
   print EC;
   print [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11];
   R1=EXIT_PROCESS;
   R2=[SYSTEM_STATUS_TABLE+1];
   call MOD_1;

   call MOD_5;
   
endif;

if(EC==2) then
   print "ILL.MEM";
   print "EIP:";
   print EIP;
   print "EPN:";
   print EPN;
   print "EMA:";
   print EMA;
   print "EC:";
   print EC;

   R1=EXIT_PROCESS;
   R2=[SYSTEM_STATUS_TABLE+1];
   call MOD_1;

   call MOD_5;
endif;

multipop(EIP);
restore;

[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
SP=SP+1;
[[PTBR+(SP/512)*2]*512+SP%512]=EIP;
ireturn;
