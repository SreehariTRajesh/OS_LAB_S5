alias userSP R0;
userSP=SP;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=SP;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;

alias syscallPhyscialAddress R1;
alias systemCall R2;
syscallPhyscialAddress=[PTBR+2*((userSP-5)/512)]*512+(userSP-5)%512;
alias pte R3;
alias resource_table R4;
alias physicalAddrRetval R5;
pte=PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16;
systemCall=[syscallPhyscialAddress];
resource_table=[pte+11]*512+496;
physicalAddrRetval=[PTBR+2*(userSP-1)/512]*512+(userSP-1)%512;
if(systemCall==19) then
   [pte+9]=19;
   alias semDesc R6;
   semDesc=[[PTBR+2*((userSP-4)/512)]*512+(userSP-4)%512];
   if(semDesc<0 || semDesc>7 || [[pte+11]*512+496+2*semDesc]!=SEMAPHORE) then 
      [physicalAddrRetval]=-1;
      [pte+9]=0;
      SP=[pte+13];
      ireturn;
   endif;
   
   alias openSemIndex R7;
   openSemIndex=[[pte+11]*512+496+2*semDesc+1];
   while([SEMAPHORE_TABLE+4*openSemIndex]!=[SYSTEM_STATUS_TABLE+1] && [SEMAPHORE_TABLE+4*openSemIndex]!=-1) do
        [pte+4]=WAIT_SEMAPHORE;
        [pte+5]=openSemIndex;
        backup;
        call MOD_5;
        restore;
   endwhile;

   // Set lock pid to pid of current process
   [SEMAPHORE_TABLE+4*openSemIndex]=[SYSTEM_STATUS_TABLE+1];
   [physicalAddrRetval]=0;
   [pte+9]=0;
   SP=[pte+13];
   ireturn;
endif;

if(systemCall==20) then
    [pte+9]=20;
    alias semDesc R6;
    semDesc=[[PTBR+2*((userSP-4)/512)]*512+(userSP-4)%512];
    if(semDesc<0 || semDesc>7 || [resource_table+2*semDesc]!=SEMAPHORE) then 
      [physicalAddrRetval]=-1;
      [pte+9]=0;
      SP=[pte+13];
      ireturn;
   endif;

    alias openSemIndex R7;
    openSemIndex=[resource_table+2*semDesc+1];
    if([SEMAPHORE_TABLE+4*openSemIndex]!=-1) then
       if([SEMAPHORE_TABLE+4*openSemIndex]!=[SYSTEM_STATUS_TABLE+1]) then
          [physicalAddrRetval]=-2;
          [pte+9]=0;
          SP=[pte+13];
          ireturn;
       endif;
       [SEMAPHORE_TABLE+4*openSemIndex]=-1;
       alias i R6;
       i=2;
       while(i<16) do
            if([PROCESS_TABLE+i*16+4]==WAIT_SEMAPHORE && [PROCESS_TABLE+i*16+5]==openSemIndex) then
                [PROCESS_TABLE+i*16+4]=READY;
            endif;
            i=i+1;
       endwhile;
    endif;

    [physicalAddrRetval]=0;
    [pte+9]=0;
    SP=[pte+13];
    ireturn;
endif;

[pte+9]=0;
SP=[+13];
ireturn;