[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=8;
alias userSP R0;
userSP=SP;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=SP;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;
alias childPID R1;
multipush(R0,R1,R2);
R1=GET_PCB_ENTRY;
call MOD_1;
R10=R0;
multipop(R0,R1,R2);
childPID=R10;

alias childPT R2;
alias childPE R3;
alias parentPE R4;
childPT=PAGE_TABLE_BASE+childPID*20;
childPE=PROCESS_TABLE+childPID*16;
parentPE=PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16;

if(childPID==-1) then
    [[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512]=-1;
    [parentPE+9]=0;
    SP=[parentPE+13];
    ireturn;
endif;

if([PTBR+4]==-1 && [PTBR+6]==-1) then
    multipush(R0,R1,R2,R3,R4);
    R1=GET_FREE_PAGE;
    call MOD_2;
    multipop(R0,R1,R2,R3,R4);
    [PTBR+4]=R10;
    [PTBR+5]="1110";

    multipush(R0,R1,R2,R3,R4);
    R1=GET_FREE_PAGE;
    call MOD_2;
    multipop(R0,R1,R2,R3,R4);
    [PTBR+6]=R10;
    [PTBR+7]="1110";
endif;


multipush(R0,R1,R2,R3,R4);
R1=GET_FREE_PAGE;
call MOD_2;
R10=R0;
multipop(R0,R1,R2,R3,R4);

[childPT+16]=R10;
[childPT+17]="0110";

multipush(R0,R1,R2,R3,R4);
R1=GET_FREE_PAGE;
call MOD_2;
R10=R0;
multipop(R0,R1,R2,R3,R4);

[childPT+18]=R10;
[childPT+19]="0110";

multipush(R0,R1,R2,R3,R4);
R1=GET_FREE_PAGE;
call MOD_2;
R10=R0;
multipop(R0,R1,R2,R3,R4);
[childPE+11]=R10;

[childPE]=0;
[childPE+1]=childPID;
[childPE+2]=[SYSTEM_STATUS_TABLE+1];
[childPE+3]=[parentPE+3];
[childPE+6]=[parentPE+6];
[childPE+7]=[parentPE+7];
[childPE+9]=0;
[childPE+10]=[parentPE+10];
[childPE+12]=0;
[childPE+13]=[parentPE+13];
[childPE+4]=CREATED;

alias i R5;
i=0;
alias p_res_table R6;
alias c_res_table R7;
p_res_table=[parentPE+11]*512+496;
c_res_table=[childPE+11]*512+496;
while(i<8) do
    [c_res_table+2*i]=[p_res_table+2*i];
    [c_res_table+2*i+1]=[p_res_table+2*i+1];
    alias open_index R9;
    open_index=[p_res_table+2*i+1];
    if([p_res_table+2*i]==SEMAPHORE) then
        [SEMAPHORE_TABLE+open_index*4+1]=[SEMAPHORE_TABLE+open_index*4+1]+1;
    endif;
    if([p_res_table+2*i]==FILE) then
        [OPEN_FILE_TABLE+open_index*4+1]=[OPEN_FILE_TABLE+open_index*4+1]+1;
    endif;
    i=i+1;
endwhile;

i=0;
while(i<10) do
    [DISK_MAP_TABLE+childPID*10+i]=[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+i];
    i=i+1;
endwhile;
i=0;

while(i<8) do
    [childPT+2*i]=[PTBR+2*i];
    [childPT+2*i+1]=[PTBR+2*i+1];
    [MEMORY_FREE_LIST+[PTBR+2*i]]=[MEMORY_FREE_LIST+[PTBR+2*i]]+1;
    i=i+1;
endwhile;

i=0;
while(i<512) do
    [[childPT+16]*512+i]=[[PTBR+16]*512+i];
    [[childPT+18]*512+i]=[[PTBR+18]*512+i];
    i=i+1;
endwhile;

[[childPE+11]*512]=BP;
alias parentSP R6;
alias childSP R7;
parentSP=[parentPE+13];
[[PTBR+2*((parentSP-1)/512)]*512+(parentSP-1)%512]=childPID;
childSP=[childPE+13];
[[childPT+2*((childSP-1)/512)]*512+(childSP-1)%512]=0;

[parentPE+9]=0;
SP=[parentPE+13];
ireturn;